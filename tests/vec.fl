# Literals, operations, and comparisons.

assert [1, 2] == [1, 2]
assert [2, 1] != [1, 2]
assert [1, 2, 3] != [1, 2]
assert [1, ["zonnebloem"], 2] != [1, ["granen"], 2]
assert [] == []
assert [] != [true]
assert [6, 9] + [4, 2, 0] == [6, 9, 4, 2, 0]
assert [1, 2, [3, 4, 5]].len() == 3

# Indexing.

assert [1, 2, 3][1] == 2
assert [1, [2, 3]][1][0] == 2
assert [1, 2][-1] == 2

let v = [1, 2, 3]
assert v[2] == 3

v[1] = 4
assert v[1] == 4

# Mapping.

assert [1, 2, 3].map(|x| 2 * x) == [2, 4, 6]

# Filtering.

assert [
	"textfile.txt",
	"main.c",
	"image.png",
	"image2.png",
	"header.h",
	"util.c",
].where(|x| x.endswith(".c") || x.endswith(".h")) == [
	"main.c",
	"header.h",
	"util.c"
]
